Introduction

This package provides a simple implementation of an Erlang Actor.

Usage

Each actor runs in a separate thread.  Extend com.nps.concurrent.SimpleActor
and implement process() to handle messages.  If you want to retrieve futher
messages within process(), call get().  To send a message to an actor,
invoke recv() on that actor.  Ideally, all actors should have no public
functions beyond what is required to initialize them before the messages
start flying, because this eliminates the need for locks, but it is
probably not realistic for complex systems.

Future Work

One could potentially use a shared thread pool instead of creating a
separate thread for every actor.  This would require tuning of the thread
pool size since some actors may run continuously, e.g., reading from a data
source, and then periodically sending messages to other actors.  With too
few threads, endless actors would monopolize all available threads.  Of
course, for very large systems, everything needs tuning since it pushes the
limits of available resources!

Installation

This package is built using Maven (http://maven.apache.org/).  Once you have
installed Maven, simply run "mvn clean install", and it will build the jar.
